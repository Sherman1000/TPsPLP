PackageManifest subclass: #ManifestPLPTP	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!!ManifestPLPTP commentStamp: '<historical>' prior: 0!I store metadata for this package. These meta data are used by other tools such as the SmalllintManifestChecker and the critics Browser!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ManifestPLPTP class	instanceVariableNames: ''!!ManifestPLPTP class methodsFor: 'code-critics' stamp: 'Sherman 6/11/2016 16:50'!ruleRBNoClassCommentRuleV1FalsePositive	^ #(#(#(#RGClassDefinition #(#PropositionalVariable)) #'2016-06-11T16:50:57.10482-03:00') )! !Object subclass: #PropositionalFormula	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!!PropositionalFormula methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 20:31'!==> aFormula	^ Implication of: self and: aFormula! !!PropositionalFormula methodsFor: 'as yet unclassified' stamp: 'Sherman 6/13/2016 23:29'!= aFormula	^ (self class isMemberOf: aFormula class) & ((formulas first) = (aFormula first)) & ((formulas second) = (aFormula second)) ! !!PropositionalFormula methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 20:30'!& aFormula	^ Conjunction of: self and: aFormula ! !!PropositionalFormula methodsFor: 'as yet unclassified' stamp: 'Sherman 6/13/2016 22:46'!asString	^ "'('," formulas first asString, self operandAsString, formulas second asString", ')'"! !!PropositionalFormula methodsFor: 'as yet unclassified' stamp: 'Sherman 6/14/2016 21:02'!allPropVars	^ SubclassResponsibility ! !!PropositionalFormula methodsFor: 'as yet unclassified' stamp: 'Sherman 6/13/2016 23:39'!hash 	^ (formulas first) hash + (formulas second) hash! !!PropositionalFormula methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 20:30'!| aFormula	^ Disjunction of: self and: aFormula ! !!PropositionalFormula methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 20:29'!not 	^ Negation of: self! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PropositionalFormula class	instanceVariableNames: ''!!PropositionalFormula class methodsFor: 'as yet unclassified' stamp: 'Sherman 6/14/2016 20:53'!of: aFormula and: anotherFormula	^ SubclassResponsibility. ! !!PropositionalFormula class methodsFor: 'as yet unclassified' stamp: 'Sherman 6/14/2016 20:53'!of: aFormula	^ SubclassResponsibility ! !PropositionalFormula subclass: #BinaryPropositionalFormula	instanceVariableNames: 'firstFormula secondFormula'	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!!BinaryPropositionalFormula methodsFor: 'as yet unclassified' stamp: 'Sherman 6/14/2016 20:59'!initWith: aFormula and: anotherFormula	firstFormula := aFormula. 	secondFormula := anotherFormula.! !!BinaryPropositionalFormula methodsFor: 'as yet unclassified' stamp: 'Sherman 6/14/2016 21:03'!allPropVars	^ firstFormula allPropVars union: secondFormula allPropVars. ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!BinaryPropositionalFormula class	instanceVariableNames: ''!!BinaryPropositionalFormula class methodsFor: 'as yet unclassified' stamp: 'Sherman 6/14/2016 20:52'!of: aFormula and: anotherFormula	^ self new initWith: aFormula and: anotherFormula ! !!BinaryPropositionalFormula class methodsFor: 'as yet unclassified' stamp: 'Sherman 6/14/2016 20:55'!of: aFormula	^ ShouldNotImplement  ! !BinaryPropositionalFormula subclass: #Conjunction	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!!Conjunction methodsFor: 'as yet unclassified' stamp: 'Sherman 6/13/2016 22:31'!value: aValuation	^ (formulas first value: aValuation) & (formulas second value: aValuation)! !!Conjunction methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 20:41'!operandAsString	^ ' & '! !BinaryPropositionalFormula subclass: #Disjunction	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!!Disjunction methodsFor: 'as yet unclassified' stamp: 'Sherman 6/13/2016 22:31'!value: aValuation	^ (formulas first value: aValuation) | (formulas second value: aValuation)! !!Disjunction methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 20:41'!operandAsString	^ ' | '! !BinaryPropositionalFormula subclass: #Implication	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!!Implication methodsFor: 'as yet unclassified' stamp: 'Sherman 6/13/2016 22:31'!value: aValuation	^ (formulas first value: aValuation) ==> (formulas second value: aValuation)! !!Implication methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 20:41'!operandAsString	^ ' ==> '! !Object subclass: #PropositionalVariable	instanceVariableNames: 'name'	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!!PropositionalVariable methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 20:27'!==> aFormula	^ Implication of: self and: aFormula! !!PropositionalVariable methodsFor: 'as yet unclassified' stamp: 'Sherman 6/13/2016 23:29'!= aFormula	^ (self class isMemberOf: aFormula class) & (name = (aFormula name))! !!PropositionalVariable methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 20:24'!& aFormula	^ Conjunction of: self and: aFormula! !!PropositionalVariable methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 20:43'!asString	^ name! !!PropositionalVariable methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 19:32'!value: aValuation	^ aValuation includes: name.! !!PropositionalVariable methodsFor: 'as yet unclassified' stamp: 'Sherman 6/13/2016 21:27'!allPropVars	^ Set with: name  ! !!PropositionalVariable methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 20:25'!| aFormula	^ Disjunction of: self and: aFormula! !!PropositionalVariable methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 18:54'!initWith: aName	name := aName.! !!PropositionalVariable methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 20:23'!not 	^ Negation of: self! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PropositionalVariable class	instanceVariableNames: ''!!PropositionalVariable class methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 18:54'!named: aName	^ self new initWith: aName.! !PropositionalFormula subclass: #UnaryPropositionalFormula	instanceVariableNames: 'firstFormula'	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!!UnaryPropositionalFormula methodsFor: 'as yet unclassified' stamp: 'Sherman 6/14/2016 20:58'!initWith: aFormula	firstFormula := aFormula.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!UnaryPropositionalFormula class	instanceVariableNames: ''!!UnaryPropositionalFormula class methodsFor: 'as yet unclassified' stamp: 'Sherman 6/14/2016 20:55'!of: aFormula and: anotherFormula	^ ShouldNotImplement ! !!UnaryPropositionalFormula class methodsFor: 'as yet unclassified' stamp: 'Sherman 6/14/2016 20:51'!of: aFormula	^ self new initWith: aFormula! !UnaryPropositionalFormula subclass: #Negation	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!!Negation methodsFor: 'as yet unclassified' stamp: 'Sherman 6/13/2016 23:17'!= aFormula	^ (self class = aFormula class) & ((formulas first) = (aFormula first))! !!Negation methodsFor: 'as yet unclassified' stamp: 'Sherman 6/14/2016 21:16'!value: aValuation	^ (firstFormula value: aValuation) not! !!Negation methodsFor: 'as yet unclassified' stamp: 'Sherman 6/13/2016 22:46'!asString	^ '¬', formulas first asString! !!Negation methodsFor: 'as yet unclassified' stamp: 'Sherman 6/14/2016 21:03'!allPropVars	^ firstFormula allPropVars.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Negation class	instanceVariableNames: ''!!Negation class methodsFor: 'as yet unclassified' stamp: 'Sherman 6/13/2016 21:08'!of: aFormula and: anotherFormula	^ MessageNotUnderstood.! !