PackageManifest subclass: #ManifestPLPTP	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!!ManifestPLPTP commentStamp: '<historical>' prior: 0!I store metadata for this package. These meta data are used by other tools such as the SmalllintManifestChecker and the critics Browser!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ManifestPLPTP class	instanceVariableNames: ''!!ManifestPLPTP class methodsFor: 'code-critics' stamp: 'Sherman 6/11/2016 16:50'!ruleRBNoClassCommentRuleV1FalsePositive	^ #(#(#(#RGClassDefinition #(#PropositionalVariable)) #'2016-06-11T16:50:57.10482-03:00') )! !Object subclass: #PropositionalFormula	instanceVariableNames: 'firstFormula'	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!!PropositionalFormula methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 19:25'!value: aValuation	^ firstFormula value: aValuation ! !!PropositionalFormula methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 19:06'!allPropVars	^ self nameYourPropositionalVariables! !!PropositionalFormula methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 20:29'!not 	^ Negation of: self! !!PropositionalFormula methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 20:30'!& aFormula	^ Conjunction of: self and: aFormula ! !!PropositionalFormula methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 20:30'!| aFormula	^ Disjunction of: self and: aFormula ! !!PropositionalFormula methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 20:31'!==> aFormula	^ Implication of: self and: aFormula! !!PropositionalFormula methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 20:45'!asString	^ '(', firstFormula asString, self operandAsString, self secondFormulaAsString, ')'! !!PropositionalFormula methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 18:36'!initWith: aFormula	firstFormula := aFormula.! !!PropositionalFormula methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 19:08'!nameYourPropositionalVariables	^ firstFormula nameYourPropositionalVariables! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PropositionalFormula class	instanceVariableNames: ''!!PropositionalFormula class methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 18:25'!of: aFormula	MessageNotUnderstood! !!PropositionalFormula class methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 18:23'!of: aFormula and: anotherFormula	^ self new initWith: aFormula and: anotherFormula ! !PropositionalFormula subclass: #Conjunction	instanceVariableNames: 'secondFormula'	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!!Conjunction methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 19:30'!value: aValuation	^ (super value: aValuation) & (secondFormula value: aValuation)! !!Conjunction methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 20:46'!secondFormulaAsString	^ secondFormula asString! !!Conjunction methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 18:36'!initWith: aFormula and: anotherFormula	super initWith: aFormula.	secondFormula := anotherFormula.! !!Conjunction methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 20:41'!operandAsString	^ ' & '! !!Conjunction methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 19:10'!nameYourPropositionalVariables	^ super nameYourPropositionalVariables union: secondFormula nameYourPropositionalVariables ! !PropositionalFormula subclass: #Disjunction	instanceVariableNames: 'secondFormula'	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!!Disjunction methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 19:30'!value: aValuation	^ (super value: aValuation) | (secondFormula value: aValuation)! !!Disjunction methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 20:46'!secondFormulaAsString	^ secondFormula asString! !!Disjunction methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 18:28'!initWith: aFormula and: anotherFormula	super initWith: aFormula.	secondFormula := anotherFormula.! !!Disjunction methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 20:41'!operandAsString	^ ' | '! !!Disjunction methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 19:10'!nameYourPropositionalVariables	^ super nameYourPropositionalVariables union: secondFormula nameYourPropositionalVariables ! !PropositionalFormula subclass: #Implication	instanceVariableNames: 'secondFormula'	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!!Implication methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 19:30'!value: aValuation	^ (super value: aValuation) ==> (secondFormula value: aValuation)! !!Implication methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 20:46'!secondFormulaAsString	^ secondFormula asString! !!Implication methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 18:29'!initWith: aFormula and: anotherFormula	super initWith: aFormula.	secondFormula := anotherFormula.! !!Implication methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 20:41'!operandAsString	^ ' ==> '! !!Implication methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 19:10'!nameYourPropositionalVariables	^ super nameYourPropositionalVariables union: secondFormula nameYourPropositionalVariables ! !PropositionalFormula subclass: #Negation	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!!Negation methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 19:33'!value: aValuation	^ (super value: aValuation) not! !!Negation methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 20:44'!asString	^ '¬', firstFormula asString! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Negation class	instanceVariableNames: ''!!Negation class methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 18:16'!of: aFormula	^ self new initWith: aFormula! !!Negation class methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 18:24'!of: aFormula and: aPropositionalVariable	MessageNotUnderstood ! !Object subclass: #PropositionalVariable	instanceVariableNames: 'name'	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!!PropositionalVariable methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 19:32'!value: aValuation	^ aValuation includes: name.! !!PropositionalVariable methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 20:23'!not 	^ Negation of: self! !!PropositionalVariable methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 20:24'!& aFormula	^ Conjunction of: self and: aFormula! !!PropositionalVariable methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 20:25'!| aFormula	^ Disjunction of: self and: aFormula! !!PropositionalVariable methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 20:27'!==> aFormula	^ Implication of: self and: aFormula! !!PropositionalVariable methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 20:43'!asString	^ name! !!PropositionalVariable methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 18:54'!initWith: aName	name := aName.! !!PropositionalVariable methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 19:06'!nameYourPropositionalVariables	^ Set with: name  ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PropositionalVariable class	instanceVariableNames: ''!!PropositionalVariable class methodsFor: 'as yet unclassified' stamp: 'Sherman 6/11/2016 18:54'!named: aName	^ self new initWith: aName.! !